#! /bin/bash

#parameters
NO_OF_MACHINES=4
LOG_BASE_LOCATION=/tmp/ag/
LOG_PREFIX=machine.
LOG_SUFFIX=.log

ips=(127.0.0.1 127.0.0.1 127.0.0.1 127.0.0.1)

echo "Machine ips are: "
for ip in ${ips[@]} 
do
	echo $ip
done

#create the required log files

for(( i=0; i<$NO_OF_MACHINES; i++))
do
	LOG_INDEX=$(($i + 1))
	LOG_FILE_NAME=$LOG_BASE_LOCATION$LOG_PREFIX$LOG_INDEX$LOG_SUFFIX
	
	echo "Creating $LOG_FILE_NAME.."
	
	#add random lines
	./createLogFile $LOG_INDEX $LOG_INDEX K
	
	#insert some known line
	echo "key1:value1" >> $LOG_FILE_NAME
	echo "key1:value2" >> $LOG_FILE_NAME
	
	#add some more random lines
	./createLogFile $LOG_INDEX $LOG_INDEX K

	#push to machines
	echo "Log file created, pushing to machine with ip ${ips[$i]}.."
	scp -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no $LOG_FILE_NAME ${ips[$i]}:$LOG_FILE_NAME.scpd
done

#the grep command we are going to run
GREP_COMMAND="grep key1.*: | grep :.*va.*1"

#run the client and server here and get the result. (which i'm expecting to be at /tmp/ag/cmdMergedOutput.out)


#now check the output
EXPECTED_OUTPUT_FILE=$LOG_BASE_LOCATIONexpectedOutput.out
ACTUAL_OUTPUT_FILE=$LOG_BASE_LOCATIONcmdMergedOutput.out
SORTED_SUFFIX=.sorted
OUTPUT_LINE_GREP_EXPRESSION="Output of command from machine"


for(( i=0; i<$NO_OF_MACHINES; i++))
do
	echo "key1:value1" >> $EXPECTED_OUTPUT_FILE
done

#strip the tags from the received output and sort it
grep -v "$OUTPUT_LINE_GREP_EXPRESSION" $ACTUAL_OUTPUT_FILE | sort > $ACTUAL_OUTPUT_FILE$SORTED_SUFFIX
sort $EXPECTED_OUTPUT_FILE > $EXPECTED_OUTPUT_FILE$SORTED_SUFFIX

diff $ACTUAL_OUTPUT_FILE$SORTED_SUFFIX $EXPECTED_OUTPUT_FILE$SORTED_SUFFIX

if [ $? -eq 0 ]
then
	echo "Unit test succeeded!"
else
	echo "Unit test failed!"
fi

rm -rf $EXPECTED_OUTPUT_FILE $ACTUAL_OUTPUT_FILE $ACTUAL_OUTPUT_FILE$SORTED_SUFFIX $EXPECTED_OUTPUT_FILE$SORTED_SUFFIX
